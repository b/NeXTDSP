/* This class was auto-generated by dspwrap from macro oscg. 
   It should not be edited. */

#import "OscgUGxy.h"

@implementation OscgUGxy : OscgUG

/* times in seconds/sample */
#define COMPUTETIME (152 * (DSP_CLOCK_PERIOD / DSPMK_I_NTICK))
#define OFFCHIP_COMPUTETIME (264 * (DSP_CLOCK_PERIOD / DSPMK_I_NTICK))

static MKLeafUGStruct _leafUGStruct = {
    {2/* xArg  */,  2/* yArg  */,  2/* lArg */,
     15/* pLoop */,  0/* pSubr */,
     0/* xData */,  0/* yData */} /* memory requirements */, COMPUTETIME};

+(MKLeafUGStruct *)classInfo  
{   if (_leafUGStruct.master == NULL)
      _leafUGStruct.master = [self masterUGPtr];
    return &_leafUGStruct; }

+initialize /* Sent once on factory start-up. */
{
enum args { atab, mtab, amp, aout, inc, phs };
   static DSPMemorySpace _argSpaces[] = {DSP_MS_Y,DSP_MS_N,DSP_MS_N,DSP_MS_X,DSP_MS_N,DSP_MS_N};
   static DSPDataRecord _dataRecP = {NULL, DSP_LC_P, 0, 1, 15}; 
   static int _dataP[] = {0x65d800,0x44e000,0x43da1b,0x41e200,0x6edc4e,
                          0x21bd00,0x4ddc00,0x61080,0x8c,0x4ced4e,
                          0x21bda1,0x44e038,0x565e00,0x415a00,0x57d800};
   static DSPFixup _fixupsP[] = {
   {DSP_LC_P, NULL, 1 /* decrement */, 8 /* refOffset */,  12 /* relAddress */}
   };
   _leafUGStruct.master = NULL;
   _leafUGStruct.argSpaces = _argSpaces;
   _leafUGStruct.data[(int)DSP_LC_P] = &_dataRecP;
   _dataRecP.data = _dataP;
   _leafUGStruct.fixups[(int)DSP_LC_P - (int)DSP_LC_P_BASE] = _fixupsP;
   MKInitUnitGeneratorClass(&_leafUGStruct);
   _leafUGStruct.reserved1 = MK_2COMPUTETIMES;
   _leafUGStruct.offChipComputeTime = OFFCHIP_COMPUTETIME;
   return self;
}
@end
