/* This class was auto-generated by dspwrap from macro out2sum. 
   It should not be edited. */

#import "Out2sumUGx.h"

@implementation Out2sumUGx : Out2sumUG

/* times in seconds/sample */
#define COMPUTETIME (196 * (DSP_CLOCK_PERIOD / DSPMK_I_NTICK))
#define OFFCHIP_COMPUTETIME (332 * (DSP_CLOCK_PERIOD / DSPMK_I_NTICK))

static MKLeafUGStruct _leafUGStruct = {
    {1/* xArg  */,  2/* yArg  */,  0/* lArg */,
     18/* pLoop */,  0/* pSubr */,
     0/* xData */,  0/* yData */} /* memory requirements */, COMPUTETIME};

+(MKLeafUGStruct *)classInfo  
{   if (_leafUGStruct.master == NULL)
      _leafUGStruct.master = [self masterUGPtr];
    return &_leafUGStruct; }

+initialize /* Sent once on factory start-up. */
{
enum args { sclA, iadr, sclB };
   static DSPMemorySpace _argSpaces[] = {DSP_MS_N,DSP_MS_X,DSP_MS_N};
   static DSPDataRecord _dataRecP = {NULL, DSP_LC_P, 0, 1, 18}; 
   static int _dataP[] = {0xf59800,0x7f095,0x3fea,0x69dc00,0x66e500,
                          0x5f426,0x3ff,0x3e0200,0x23dd00,0x45e15,
                          0x61080,0x8f,0xc2d900,0x5fcda3,0x5e5ecb,
                          0x5f5e00,0x5f426,0xffffff};
   static DSPFixup _fixupsP[] = {
   {DSP_LC_P, NULL, 1 /* decrement */, 11 /* refOffset */,  15 /* relAddress */}
   };
   _leafUGStruct.master = NULL;
   _leafUGStruct.argSpaces = _argSpaces;
   _leafUGStruct.data[(int)DSP_LC_P] = &_dataRecP;
   _dataRecP.data = _dataP;
   _leafUGStruct.fixups[(int)DSP_LC_P - (int)DSP_LC_P_BASE] = _fixupsP;
   MKInitUnitGeneratorClass(&_leafUGStruct);
   _leafUGStruct.reserved1 = MK_2COMPUTETIMES;
   _leafUGStruct.offChipComputeTime = OFFCHIP_COMPUTETIME;
   return self;
}
@end
