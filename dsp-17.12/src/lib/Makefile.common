# CHANGES: 	rm -rf disabled
# 		directory defs moved to /ds/dsp/Makefile.config
# 02/25/89/jos - TAGS removed from INSTALL_FILES
# 03/30/89/jos - make clean now also deletes libdsp_p.a
# 05/15/89/jos - removed TAGS from "make clean"
# 04/18/90/jos - removed VERSFILE stuff

#
#  NeXT common include file for Internal Makefiles
#  Copyright 1987, NeXT, Inc.
#
#  This Makefile is included to gain the rules and definitions shared by
#  the library and application makefiles.
#

# let make know about specsheet files
.SUFFIXES: .spec .aux

# command to build shared libraries
MKSHLIB = mkshlib

# command to use for printing source
PRINT = list

# flags used in all installs
IFLAGS = -q -c

# all the object files, including a file with a version stamp
OFILES = $(MFILES:.m=.o) $(CFILES:.c=.o) $(PSWFILES:.psw=.o)	\
	$(PSWMFILES:.pswm=.o) $(SFILES:.s=.o) $(LFILES:.l=.o)	\
	$(LMFILES:.lm=.o) $(YFILES:.y=.o) $(YMFILES:.ym=.o)	\
	$(OTHER_SRCS_OFILES)

# source files derived in the build process
DERIVED_SRC = $(PSWFILES:.psw=.c) $(PSWMFILES:.pswm=.m) \
	$(YMFILES:.ym=.m) $(LMFILES:.lm=.m) $(YFILES:.y=.c) $(LFILES:.l=.c)

# does an install to a local root
local: LCLROOT
	$(MAKE) install "DSTROOT = $(LCLROOT)"

# all source code
SRCS = $(MFILES) $(CFILES) $(PSWFILES) $(PSWMFILES) $(SFILES) \
	$(LFILES) $(LMFILES) $(YFILES) $(YMFILES) $(HFILES) \
	$(PSFILES) $(OTHER_SRCS)

# all non-derived, non-garbage files.  This is the source, plus Makefiles,
# plus anything else that needs to be around for the products to be made.
# INSTALL_FILES = $(SRCS) TAGS %README ...
INSTALL_FILES = $(SRCS) \
		Makefile Makefile.lib Makefile.common
#		Makefile Makefile.lib Makefile.common Makefile.depends

# removes all derived files
clean: lean
	-/bin/rm -f lib$(NAME).a lib$(NAME)_g.a lib$(NAME)_p.a \
			lib$(NAME)_s.a lib$(NAME)_s.$(SHLIBVERS).shlib
	-/bin/rm -f dsp/smsrc_dependencies.h
	-/bin/rm -f Makefile.depends $(DERIVED_INCFILES)

# removes all derived files leaving product
lean:
	-/bin/rm -f $(OFILES) C_* P_* $(SPECIFIC_GARBAGE) $(DERIVED_SRC) 
	-/bin/rm -rf $(DIRECTORY_GARBAGE)


#  The tags target creates an index on the source files' functions.
#tags:: $(MFILES) $(CFILES) $(PSWFILES) $(PSWMFILES) $(LFILES) \
#		$(LMFILES) $(YFILES) $(YMFILES) $(HFILES)
#	ctags $(MFILES) $(CFILES) $(PSWFILES) $(PSWMFILES) $(LFILES) \
#		$(LMFILES) $(YFILES) $(YMFILES) $(HFILES)

#  prints out all source files
print:: $(SRCS)
	$(PRINT) $(SRCS)

# lints all source files (oh, what to do about .m's?? )
lint:: $(CFILES)
	lint -I$(INC_DIR) $(CFILES) $(LINTLIBS) -lc

# shows line count of source
wc: $(SRCS)
	wc $(SRCS)

# diffs the current sources with the installed sources
diff::
	for f in $(SRCS);				\
	    do (echo $$f;				\
	    csh -f -c "diff -c $(LIB_SRC_ROOT)/$$f $$f; exit 0")	\
	done

#  The depend target scans the source files for includes and generates
#  the right dependencies to reflect those inter-file dependencies.
#$(PRODUCT): .depend_done

depend .depend_done:
	if (test "$(DERIVED_SRC)" != " ")			\
	    then $(MAKE) $(DERIVED_SRC);			\
	fi
	-/bin/rm -f Makefile.depends
	$(CC) -M $(CFLAGS) $(MFILES) $(CFILES) $(SFILES) $(DERIVED_SRC) | \
	    awk '{ if ($$1 != prev) { if (rec != "") print rec; \
		rec = $$0; prev = $$1; } \
		else { if (length(rec $$2) > 78) { print rec; rec = $$0; } \
		else rec = rec " " $$2 } } \
		END { print rec }' >Makefile.depends
	-touch .depend_done

.m.spec:
	-speculate $(SPECFLAGS) $*.m

